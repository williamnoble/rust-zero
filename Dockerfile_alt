# Create three build stages
# - Compute recipe file
# - Cache deps and build binary (provided deps are the same this stage is cached/quicker)
# - Runtime environment

FROM lukemathwalker/cargo-chef:latest-rust-1.59.0 as chef
WORKDIR /app
RUN apt update && apt install lld clang -y

# Step 1: # Compute a recipe (lock file)
FROM chef as planner
COPY . .
RUN cargo chef prepare --recipe-path recipe.json

# Step 2: Cache depedencies and build the binary (cache stage)
FROM chef as builder
COPY --from=planner /app/recipe.json recipe.json
# Build only project dependencies, not the application
RUN cargo chef cook --release --recipe-path recipe.json
# <-        END OF CACHE STAGE      ->
COPY . .
ENV SQLX_OFFLINE true
RUN cargo build --release --bin zero2prod

FROM debian:bullseye-slim AS runtime
WORKDIR /app
RUN apt-get update -y \
&& apt-get install -y --no-install-recommends openssl ca-certificates \
# Clean up
&& apt-get autoremove -y \
&& apt-get clean -y \
&& rm -rf /var/lib/apt/lists/*
COPY --from=builder /app/target/release/zero2prod zero2prod
COPY configuration configuration
ENV APP_ENVIRONMENT production
ENTRYPOINT ["./zero2prod"]